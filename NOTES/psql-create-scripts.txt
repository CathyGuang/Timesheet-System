/* CREATE USER */
-- User: "ForwardStrideAdmin"
-- TO RESET:
-- DROP USER "ForwardStrideAdmin";

CREATE USER "ForwardStrideAdmin" WITH
  LOGIN
  SUPERUSER
  INHERIT
  CREATEDB
  CREATEROLE
  NOREPLICATION
  ENCRYPTED PASSWORD 'fsdatabaseadministrator5';

\c postgres ForwardStrideAdmin

/* CREATE DATABASE */
-- Database: ForwardStrideDatabase
-- TO RESET:
-- DROP DATABASE "ForwardStrideDatabase";

CREATE DATABASE "ForwardStrideDatabase"
    WITH
    OWNER = "ForwardStrideAdmin"
    ENCODING = 'UTF8'
    LC_COLLATE = 'English_United States.1252'
    LC_CTYPE = 'English_United States.1252'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1;

/* SWITCH USER AND CONNECT TO NEW DATABASE */

\c ForwardStrideDatabase



/* CREATE WORKERS TABLE */

CREATE TABLE workers (
  id SERIAL PRIMARY KEY,
  archived TEXT,
  title TEXT,
  name TEXT,
  email TEXT,
  phone TEXT,
  staff BOOLEAN,
  volunteer BOOLEAN
);


/* CREATE CLIENTS TABLE */

CREATE TABLE clients (
  id SERIAL PRIMARY KEY,
  archived TEXT,
  name TEXT,
  email TEXT,
  phone TEXT
);


/* CREATE HORSES TABLE */

CREATE TABLE horses (
  id SERIAL PRIMARY KEY,
  archived TEXT,
  name TEXT,
  fs_uses_per_day INT,
  owner_uses_per_day INT,
  notes TEXT
);


/* CREATE HORSE CARE TABLE */

CREATE TYPE CARE_TYPE AS ENUM();

CREATE TABLE horse_care_shifts (
  id SERIAL PRIMARY KEY,
  archived TEXT,
  care_type CARE_TYPE,
  date_of_shift DATE,
  start_time TIME,
  end_time TIME,
  all_weekdays_times TEXT,
  leader INT REFERENCES workers(id),
  volunteers INT []
);


/* CREATE OFFICE SHIFT TABLE */

CREATE TYPE OFFICE_SHIFT_TYPE AS ENUM();

CREATE TABLE office_shifts (
  id SERIAL PRIMARY KEY,
  archived TEXT,
  office_shift_type OFFICE_SHIFT_TYPE,
  date_of_shift DATE,
  start_time TIME,
  end_time TIME,
  all_weekdays_times TEXT,
  leader INT REFERENCES workers(id),
  volunteers INT []
);


/* CREATE VOLUNTEER HOURS TABLE */

CREATE TABLE volunteer_hours (
  id SERIAL PRIMARY KEY,
  volunteer INT REFERENCES workers(id),
  hours NUMERIC,
  shift_type TEXT,
  date_of_hours DATE
);


/* CREATE STAFF HOURS TABLE */
CREATE TYPE STAFF_WORK_TYPE AS ENUM();

CREATE TABLE staff_hours (
  id SERIAL PRIMARY KEY,
  staff INT REFERENCES workers(id),
  hours NUMERIC,
  work_type TEXT,
  date_of_hours DATE
);


/* INITIALIZE NECESSARY NULL VALUES */
INSERT INTO workers (name) VALUES ('');
INSERT INTO workers (name) VALUES ('NEED');

INSERT INTO clients (name) VALUES ('');
INSERT INTO horses (name) VALUES ('');
INSERT INTO horses (name) VALUES ('HORSE NEEDED');

/* CREATE CLASS TABLE */

CREATE TYPE CLASS_TYPE AS ENUM();
CREATE TYPE ARENA AS ENUM();
CREATE TYPE HORSE_BEHAVIOR AS ENUM();
CREATE TYPE TACK AS ENUM();
CREATE TYPE PAD AS ENUM();

ALTER TYPE ARENA ADD VALUE '';
ALTER TYPE HORSE_BEHAVIOR ADD VALUE '';
ALTER TYPE TACK ADD VALUE '';
ALTER TYPE PAD ADD VALUE '';

CREATE TABLE classes (
  id SERIAL PRIMARY KEY,
  archived TEXT,
  class_type CLASS_TYPE,
  date_of_class DATE,
  cancelled BOOLEAN,
  start_time TIME,
  end_time TIME,
  all_weekdays_times TEXT,
  arena ARENA,
  lesson_plan TEXT,
  horses INT [],
  horse_behavior HORSE_BEHAVIOR,
  horse_behavior_notes TEXT,
  tacks TACK [],
  special_tack TEXT,
  stirrup_leather_length TEXT,
  pads PAD [],
  clients INT [],
  attendance INT [],
  client_notes TEXT,
  instructor INT REFERENCES workers(id),
  therapist INT REFERENCES workers(id),
  equine_specialist INT REFERENCES workers(id),
  leaders INT [],
  sidewalkers INT []
);


/* CREATE ARCHIVED ENUMS TABLE */
CREATE TABLE archived_enums (
  name TEXT
);
